var http=require("http"),express=require("express"),fs=require("fs"),io=require("socket.io"),crypto=require("crypto"),app=express(),staticDir=express["static"],server=http.createServer(app);io=io(server);var opts={port:process.env.PORT||1948,baseDir:__dirname+"/../../"};io.on("connection",function(e){e.on("multiplex-statechanged",function(t){"undefined"!=typeof t.secret&&null!=t.secret&&""!==t.secret&&createHash(t.secret)===t.socketId&&(t.secret=null,e.broadcast.emit(t.socketId,t))})}),["css","js","plugin","lib"].forEach(function(e){app.use("/"+e,staticDir(opts.baseDir+e))}),app.get("/",function(e,t){t.writeHead(200,{"Content-Type":"text/html"}),fs.createReadStream(opts.baseDir+"/index.html").pipe(t)}),app.get("/token",function(e,t){var r=(new Date).getTime(),s=Math.floor(9999999*Math.random()),o=r.toString()+s.toString();t.send({secret:o,socketId:createHash(o)})});var createHash=function(e){var t=crypto.createCipher("blowfish",e);return t["final"]("hex")};server.listen(opts.port||null);var brown="[33m",green="[32m",reset="[0m";console.log(brown+"reveal.js:"+reset+" Multiplex running on port "+green+opts.port+reset);